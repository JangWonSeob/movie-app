<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.website.movie.biz.dao.TvDao">

	<sql id="TABLE">tv</sql>

    <sql id="WHERE_REQUIRED">
        AND T1.DEL_YN = 0
    </sql>

    <sql id="WHERE">
        <if test="searchValue != null and searchValue != ''">
            AND (
            T1.TITLE LIKE CONCAT('%', #{searchValue}, '%') OR
            T1.OVERVIEW LIKE CONCAT('%', #{searchValue}, '%')
            )
        </if>

        <if test="searchGenre != null and  searchGenre != ''">
             AND T1.GENRE_IDS LIKE CONCAT('%', #{searchGenre}, '%')
        </if>

        <if test="searchGenreList != null and searchGenreList !=''">
            AND
            <foreach item="item" index="index" collection="searchGenreList.split(',')"  open="(" separator="OR" close=")">
                T1.GENRE_IDS LIKE CONCAT ('%' , #{item}, '%')
            </foreach>
        </if>

        <if test="searchProvider != null and searchProvider != ''">
            AND TWP.PROVIDER_ID IN
            <foreach item="item" index="index" collection="searchProvider.split(',')"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </sql>

    <select id="index" resultType="com.website.movie.biz.dto.TvDto">
        SELECT T1.*
        FROM <include refid="TABLE"/> T1
        ORDER BY T1.POPULARITY DESC
        LIMIT 4
    </select>

    <select id="main" resultType="com.website.movie.biz.dto.TvDto">
        SELECT T1.*
        FROM <include refid="TABLE"/> T1
        WHERE T1.GENRE_IDS LIKE CONCAT('%', #{searchGenre}, '%')
        ORDER BY T1.POPULARITY DESC
        LIMIT 4
    </select>

	<select id="selectList" resultType="com.website.movie.biz.dto.TvDto">
        SELECT T1.*
        FROM <include refid="TABLE"/> T1
        LEFT JOIN tv_watch_providers TWP ON T1.ID = TWP.TV_ID
        WHERE 1 = 1
        <include refid="WHERE_REQUIRED"/>
        <include refid="WHERE"/>
        GROUP BY T1.ID
        ORDER BY T1.POPULARITY DESC
        LIMIT #{startIndex}, #{pageSize}
    </select>

    <select id="selectListCount" resultType="int">
        SELECT COUNT(DISTINCT T1.ID)
        FROM <include refid="TABLE"/> T1
        WHERE 1 = 1
        <include refid="WHERE_REQUIRED"/>
        <include refid="WHERE"/>
    </select>

    <select id="selectOne" resultType="com.website.movie.biz.dto.TvDto">
        SELECT T1.*
        FROM <include refid="TABLE"/> T1
        WHERE T1.ID = #{id}
        <include refid="WHERE_REQUIRED"/>
        LIMIT 1
    </select>

    <insert id="insert">
        INSERT INTO <include refid="TABLE"/>
        (
            REG_DT
            , DEL_YN

            , ID
            , TITLE
            , OVERVIEW
            , GENRE_IDS
            , GENRE_NAMES
            , ADULT
            , ORIGINAL_LANGUAGE
            , ORIGINAL_TITLE
            , BACKDROP_PATH
            , POSTER_PATH
            , FIRST_AIR_DATE
            , LAST_AIR_DATE
            , VOTE_AVERAGE
            , VOTE_COUNT
            , POPULARITY
            , SEASONS_NUMBER
            , VIEW_COUNT
            , DISPLAY_YN
        )
        VALUES
        (
            NOW()
            , 0

            , #{id}
            , #{title}
            , #{overview}
            , #{genreIds}
            , #{genreNames}
            , #{adult}
            , #{originalLanguage}
            , #{originalTitle}
            , #{backdropPath}
            , #{posterPath}
            , #{firstAirDate}
            , #{lastAirDate}
            , #{voteAverage}
            , #{voteCount}
            , #{popularity}
            , #{seasonsNumber}
            , #{viewCount}
            , #{displayYn}
        )
    </insert>

    <update id="update">
        UPDATE <include refid="TABLE"/>
        SET
        <choose>
            <when test="sqlUpdateType != null and sqlUpdateType eq 'VIEW_COUNT_UP'">
                VIEW_COUNT = VIEW_COUNT + 1
            </when>
            <otherwise>
                UPD_DT = NOW()
                , TITLE = #{title}
                , OVERVIEW = #{overview}
                , ADULT = #{adult}
                , ORIGINAL_LANGUAGE = #{originalLanguage}
                , ORIGINAL_TITLE = #{originalTitle}
                , BACKDROP_PATH = #{backdropPath}
                , POSTER_PATH = #{posterPath}
                , FIRST_AIR_DATE = #{firstAirDate}
                , LAST_AIR_DATE = #{lastAirDate}
                , VOTE_AVERAGE = #{voteAverage}
                , VOTE_COUNT = #{voteCount}
                , POPULARITY = #{popularity}
                , SEASONS_NUMBER = #{seasonsNumber}
                , DISPLAY_YN = #{displayYn}
            </otherwise>
        </choose>
        WHERE ID = #{id}
    </update>

    <delete id="delete">
        DELETE FROM <include refid="TABLE"/>
        WHERE ID = #{id}
    </delete>

</mapper>